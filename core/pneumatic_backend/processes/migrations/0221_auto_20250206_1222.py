# Generated by Django 2.2 on 2025-02-06 12:22

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('processes', '0220__remove_template_ids'),
    ]

    operations = [
        migrations.AddField(
            model_name='workflow',
            name='active_current_task',
            field=models.PositiveIntegerField(default=1, null=True, blank=True, help_text='Not count skipped tasks'),
        ),
        migrations.AddField(
            model_name='workflow',
            name='active_tasks_count',
            field=models.IntegerField(blank=True, help_text='Not count skipped tasks', null=True),
        ),
        # Set default active_tasks_count value for cases when all tasks is skipped or deleted
        migrations.RunSQL(
            """
            UPDATE processes_workflow 
              SET active_tasks_count = tasks_count 
            """
        ),
        # Set active_tasks_count in other cases
        migrations.RunSQL(
            """
            UPDATE processes_workflow 
              SET active_tasks_count = result.calculated_tasks_count 
            FROM (
               SELECT
                 pt.workflow_id,
                 COUNT(pt.id) as calculated_tasks_count
               FROM processes_task pt
               WHERE is_deleted IS FALSE
                 AND is_skipped IS FALSE
               GROUP BY pt.workflow_id
            ) AS result
            WHERE processes_workflow.id = result.workflow_id
            """
        ),
        migrations.RunSQL(
            """
            UPDATE processes_workflow 
              SET active_current_task = (
                CASE
                  WHEN result.end_workflow_by_flow THEN active_tasks_count
                  WHEN result.active_current_task < 1 THEN 1
                  ELSE result.active_current_task
                END
              )
            FROM (
                SELECT 
                  pw.id,
                  (pw.status = 1 AND (pt.is_completed OR pt.is_skipped)) AS end_workflow_by_flow,
                  (current_task - (tasks_count - active_tasks_count)) AS active_current_task
                FROM processes_workflow pw 
                INNER JOIN processes_task pt 
                  ON pw.id = pt.workflow_id
                  AND pw.current_task = pt.number
            ) AS result
            WHERE processes_workflow.id = result.id
            """
        )
    ]
